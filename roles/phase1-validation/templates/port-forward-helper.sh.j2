#!/bin/bash

# Kubernetes Port Forward Helper Script
# Generated by Phase 1 deployment

echo "🔌 Kubernetes Port Forward Helper"
echo "=================================="

# Check if kubectl is available
if ! command -v kubectl &> /dev/null; then
    echo "❌ kubectl not found. Please install kubectl first."
    exit 1
fi

# Check kubeconfig
if [[ ! -f "{{ playbook_dir }}/../files/kubeconfig" ]]; then
    echo "❌ kubeconfig not found at {{ playbook_dir }}/../files/kubeconfig"
    echo "💡 Make sure you've run Phase 0 and Phase 1 successfully"
    exit 1
fi

export KUBECONFIG="{{ playbook_dir }}/../files/kubeconfig"

echo "📡 Available port-forward options:"
echo ""
echo "1. Ingress NGINX (HTTP/HTTPS traffic)"
echo "2. Kubernetes API Server"
echo "3. Individual service port-forward"
echo ""

read -p "Choose option (1-3): " choice

case $choice in
    1)
        echo "🌐 Starting Ingress NGINX port-forward..."
        echo "📍 HTTP:  http://localhost:{{ port_forward_http }}"
        echo "📍 HTTPS: https://localhost:{{ port_forward_https }}"
        echo ""
        echo "🔗 Add to /etc/hosts:"
        echo "127.0.0.1 {{ ingress_domains | join(' ') }}"
        echo ""
        echo "Press Ctrl+C to stop"
        kubectl port-forward svc/ingress-nginx-controller {{ port_forward_http }}:80 {{ port_forward_https }}:443 -n {{ ingress_nginx_namespace }}
        ;;
    2)
        echo "🎯 Starting Kubernetes API Server port-forward..."
        echo "📍 API: https://localhost:8443"
        echo ""
        echo "Press Ctrl+C to stop"
        kubectl port-forward svc/kubernetes 8443:443 -n default
        ;;
    3)
        echo "🔍 Available services:"
        kubectl get svc -A
        echo ""
        read -p "Enter namespace: " namespace
        read -p "Enter service name: " service
        read -p "Enter local port: " local_port
        read -p "Enter service port: " service_port
        
        echo "🚀 Starting port-forward for $service..."
        kubectl port-forward svc/$service $local_port:$service_port -n $namespace
        ;;
    *)
        echo "❌ Invalid option"
        exit 1
        ;;
esac
