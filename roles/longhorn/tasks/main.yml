---
- name: "Add Longhorn Helm repository"
  kubernetes.core.helm_repository:
    name: longhorn
    repo_url: https://charts.longhorn.io

- name: "Create longhorn-system namespace"
  kubernetes.core.k8s:
    name: "{{ longhorn_namespace }}"
    api_version: v1
    kind: Namespace
    state: present
    kubeconfig: /etc/kubernetes/admin.conf

- name: "Check if open-iscsi is installed"
  command: which iscsiadm
  register: iscsi_check
  failed_when: false
  changed_when: false

- name: "Install open-iscsi if not present"
  apt:
    name: open-iscsi
    state: present
  when: iscsi_check.rc != 0

- name: "Start and enable iscsid service"
  systemd:
    name: iscsid
    state: started
    enabled: yes

- name: "Install Longhorn via Helm"
  kubernetes.core.helm:
    name: longhorn
    chart_ref: longhorn/longhorn
    chart_version: "{{ longhorn_version }}"
    release_namespace: "{{ longhorn_namespace }}"
    create_namespace: false
    kubeconfig: /etc/kubernetes/admin.conf
    values:
      # Single node configuration
      defaultSettings:
        defaultReplicaCount: "{{ longhorn_replica_count }}"
        backupstorePollInterval: "300"
        createDefaultDiskLabeledNodes: true
        defaultDataPath: "/var/lib/longhorn/"
        defaultLonghornStaticStorageClass: "{{ longhorn_storage_class }}"
        replicaSoftAntiAffinity: false
        storageOverProvisioningPercentage: 100
        storageMinimalAvailablePercentage: 15
        upgradeChecker: false
        
      # Resource settings for single node
      longhornManager:
        tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      
      longhornDriver:
        tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      
      # UI configuration
      longhornUI:
        tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"

- name: "Wait for Longhorn pods to be ready"
  command: kubectl wait --for=condition=ready pod -l app=longhorn-manager -n {{ longhorn_namespace }} --timeout=300s
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  retries: 3
  delay: 30

- name: "Create Longhorn Ingress"
  kubernetes.core.k8s:
    state: present
    kubeconfig: /etc/kubernetes/admin.conf
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: longhorn-ingress
        namespace: "{{ longhorn_namespace }}"
        annotations:
          cert-manager.io/cluster-issuer: "ca-issuer"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
      spec:
        ingressClassName: nginx
        tls:
          - hosts:
              - longhorn.k8s.local
            secretName: longhorn-tls
        rules:
          - host: longhorn.k8s.local
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: longhorn-frontend
                      port:
                        number: 80

- name: "Verify Longhorn installation"
  command: kubectl get pods -n {{ longhorn_namespace }}
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: longhorn_pods

- name: "Display Longhorn pods"
  debug:
    msg: "{{ longhorn_pods.stdout_lines }}"

- name: "Check Longhorn StorageClass"
  command: kubectl get storageclass
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: storage_classes

- name: "Display StorageClasses"
  debug:
    msg: "{{ storage_classes.stdout_lines }}"
